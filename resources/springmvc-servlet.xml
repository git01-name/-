<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   
   <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器；【还自动解决了文本参数可以提交到控制器】 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的[总大小]不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="200000" />
	</bean>


	<!--注意：不要和全局异常冲突； SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
              	  <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
            </props>  
        </property>  
    </bean>  
   
   
   
   <!-- 支持controller包下面的所有注解 -->
   <context:component-scan base-package="controller,service,dao"></context:component-scan>
   
   
   
   
<!--解决返回中文乱码  -->

  <mvc:annotation-driven>
   		<mvc:message-converters>
   			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
   				<property name="supportedMediaTypes">
   					<list>
   						<value>application/json;charset=UTF-8</value>
   					</list>
   				</property>
   			</bean>
   			<!--  <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
   				<property name="supportedMediaTypes">
   					<list>
   						<value>text/html;charset=UTF-8</value>
   						<value>application/json</value>
   					</list>
   				</property>
   				<property name="features">
   					<list>
   						<value>WriteDateUseDateFormat</value>
   					</list>
   				</property>
   			</bean>-->
   		</mvc:message-converters>
   </mvc:annotation-driven>



<!-- 
<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
              <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
 -->

   
	<!-- 
		配置返回的页面规则
		完成视图的对应 
		对转向页面的路径解析。prefix：前缀， suffix：后缀 
	-->
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/calendar/" mapping="/calendar/**"/>
	<mvc:resources location="/images/" mapping="/images/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>
